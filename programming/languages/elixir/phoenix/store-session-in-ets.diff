commit 0eea4c15330f992a0d1e6bcef934b9d5db5e0c33
Author: JY <joe.g.yates@gmail.com>
Date:   Sun Jun 4 21:53:44 2023 +0200

    Store the session in an ETS table

diff --git lib/devanagame/application.ex lib/devanagame/application.ex
index 6c015f6..932a497 100644
--- lib/devanagame/application.ex
+++ lib/devanagame/application.ex
@@ -7,6 +7,8 @@ defmodule Devanagame.Application do
 
   @impl true
   def start(_type, _args) do
+    DevanagameWeb.Session.ensure_ets_table()
+
     children = [
       # Start the Telemetry supervisor
       DevanagameWeb.Telemetry,
diff --git lib/devanagame_web/endpoint.ex lib/devanagame_web/endpoint.ex
index a3ed242..ff26db6 100644
--- lib/devanagame_web/endpoint.ex
+++ lib/devanagame_web/endpoint.ex
@@ -5,10 +5,9 @@ defmodule DevanagameWeb.Endpoint do
   # this means its contents can be read but not tampered with.
   # Set :encryption_salt if you would also like to encrypt it.
   @session_options [
-    store: :cookie,
+    store: :ets,
     key: "_devanagame_key",
-    signing_salt: "o48sSo46",
-    same_site: "Lax"
+    table: DevanagameWeb.Session.table_name()
   ]
 
   socket "/live", Phoenix.LiveView.Socket, websocket: [connect_info: [session: @session_options]]
diff --git lib/devanagame_web/session.ex lib/devanagame_web/session.ex
new file mode 100644
index 0000000..a932809
--- /dev/null
+++ lib/devanagame_web/session.ex
@@ -0,0 +1,14 @@
+defmodule DevanagameWeb.Session do
+  alias Plug.Conn
+
+  @table :session
+
+  def table_name, do: @table
+
+  def ensure_ets_table do
+    ref = :ets.whereis(@table)
+    if ref == :undefined do
+      _name = :ets.new(@table, [:named_table, :public, read_concurrency: true])
+    end
+  end
+end
